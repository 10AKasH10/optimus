package store

import (
	"context"
	"io"
	"time"

	"github.com/odpf/optimus/models"
)

// JobSpecRepository represents a storage interface for Job specifications
type JobSpecRepository interface {
	Save(models.JobSpec) error
	GetByName(string) (models.JobSpec, error)
	GetAll() ([]models.JobSpec, error)
	Delete(string) error
}

// ProjectRepository represents a storage interface for registered projects
type ProjectRepository interface {
	Save(models.ProjectSpec) error
	GetByName(string) (models.ProjectSpec, error)
	GetAll() ([]models.ProjectSpec, error)
}

// JobRepository represents a storage interface for compiled specifications for
// JobSpecs
type JobRepository interface {
	Save(models.Job) error
	GetByName(string) (models.Job, error)
	GetAll() ([]models.Job, error)
	Delete(string) error
}

// InstanceSpecRepository represents a storage interface for Job runs generated by
// a running instance of job
type InstanceSpecRepository interface {
	Save(models.InstanceSpec) error
	GetByScheduledAt(time.Time) (models.InstanceSpec, error)
	Clear(time.Time) error
}

// ObjectWriter can be used to write in s3 compatible storage interfaces like
// aws s3, gcs, digitalocean buckets, etc.
type ObjectWriter interface {
	NewWriter(ctx context.Context, bucket, path string) (io.WriteCloser, error)
}

// ObjectReader similar to objectWriter but for reading
type ObjectReader interface {
	NewReader(bucket, path string) (io.ReadCloser, error)
}
